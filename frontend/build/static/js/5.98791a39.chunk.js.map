{"version":3,"sources":["components/AsyncLoader/index.jsx","DesktopView/DesktopProductDetail/index.jsx"],"names":["AsyncLoader","className","src","AnimationImage","mapDispatchToProps","dispatch","fetchPublicSingleProductFun","id","fetchPublicSingleProduct","addToCartFun","data","addToCart","withRouter","connect","state","singleProductState","Products","singleProduct","singleProductLoaderState","productLoader","addToCartProductsState","Cart","match","useState","activeSlider","setActiveSlider","left","activeArrowOffset","setActiveArrowOffset","tabActive","setTabActive","cartItems","setCartItems","itemQuantity","setItemQuantity","detectWholeSalePrice","setDetectWholeSalePrice","cartLoader","setCartLoader","wholeSaleIndex","setWholeIndex","useEffect","params","window","scrollTo","useMemo","product","varient","renderVarients","map","item","label","name","value","extractedCartItem","length","localStorage","setItem","JSON","stringify","parse","getItem","console","log","image","url","images","index","onClick","price","lines","dangerouslySetInnerHTML","__html","description","substring","options","placeholder","onChange","siteConfig","wholeSaleData","style","background","color","QuantityPicker","min","max","pickerOnchange","propsValue","Button","title","colors","buttonOrangeColor","hoverBackground","buttonOrangeColorHover","type","borderRadius","padding","callBack","productItem","product_id","_id","quantity","setTimeout","loader"],"mappings":"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","file":"static/js/5.98791a39.chunk.js","sourcesContent":["/** @format */\n\nimport React from 'react'\n\nimport AnimationImage from '../../images/main-logo.webp'\nimport './async-loader.scss'\n\nconst AsyncLoader = () => {\n  return (\n    <div className=\"async-loader-container\">\n      <img src={AnimationImage} className=\"animation-loader-image\" />\n      <div>Loading...</div>\n    </div>\n  )\n}\n\nexport default AsyncLoader\n","/** @format */\n\nimport React, { useState, useEffect, useMemo } from 'react'\nimport Select from 'react-select'\nimport { connect } from 'react-redux'\nimport Truncate from 'react-truncate-html'\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchPublicSingleProduct } from '../../redux/actions/products'\nimport { addToCart } from '../../redux/actions/cart'\nimport { siteConfig } from '../../components/Static/static'\nimport AsyncLoader from '../../components/AsyncLoader'\nimport Button from '../../components/Button'\nimport QuantityPicker from '../../components/QuantityPicker'\nimport './product-detail.scss'\n\nconst DesktopProductDetail = ({\n  fetchPublicSingleProductFun,\n  singleProductState,\n  match,\n  singleProductLoaderState,\n  addToCartFun,\n  addToCartProductsState,\n}) => {\n  const [activeSlider, setActiveSlider] = useState()\n  const [activeArrowOffset, setActiveArrowOffset] = useState({ left: '356.583px' })\n  const [tabActive, setTabActive] = useState('detail')\n  const [cartItems, setCartItems] = useState([])\n  const [itemQuantity, setItemQuantity] = useState(1)\n  const [detectWholeSalePrice, setDetectWholeSalePrice] = useState(false)\n  const [cartLoader, setCartLoader] = useState(false)\n  const [wholeSaleIndex, setWholeIndex] = useState('')\n\n  useEffect(() => {\n    fetchPublicSingleProductFun(match.params.id)\n    window.scrollTo(0, 0)\n  }, [])\n\n  useMemo(() => {\n    setActiveSlider(\n      singleProductState &&\n        singleProductState.product &&\n        singleProductState.product.varient &&\n        singleProductState.product.varient[0]\n    )\n  }, [singleProductState && singleProductState.product, cartItems])\n\n  const product = singleProductState && singleProductState.product\n\n  const addProductsToCart = () => {\n    setCartLoader(true)\n    let productItem = {\n      product_id: product._id,\n      name: product.name,\n      quantity: itemQuantity,\n      price: detectWholeSalePrice\n        ? product && product.price\n        : product && product.price && product.price[0] && product.price[0].price,\n    }\n\n    addToCartFun(productItem)\n\n    setTimeout(() => {\n      window.scrollTo(0, 0)\n      setCartLoader(false)\n    }, 500)\n\n    setCartItems([...cartItems, productItem])\n  }\n\n  const renderVarients =\n    product &&\n    product.varient &&\n    product.varient.map((item) => ({ label: item.name, value: item.name, item }))\n\n  let extractedCartItem = []\n\n  if (addToCartProductsState && addToCartProductsState.length > 0) {\n    extractedCartItem = addToCartProductsState\n    localStorage.setItem('addToCart', JSON.stringify(extractedCartItem))\n  } else {\n    let productStringify = JSON.parse(localStorage.getItem('addToCart'))\n    extractedCartItem = productStringify\n  }\n\n  console.log('@@ single', product)\n\n  return singleProductLoaderState ? (\n    <AsyncLoader />\n  ) : (\n    <div className=\"product-container\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <div className=\"image-slider-container\">\n              <div className=\"product-image\">\n                <img\n                  src={\n                    singleProductState &&\n                    singleProductState.product &&\n                    singleProductState.product.varient &&\n                    singleProductState.product.varient.length > 0\n                      ? activeSlider && activeSlider.image && activeSlider.image.url\n                      : singleProductState &&\n                        singleProductState.product &&\n                        singleProductState.product &&\n                        singleProductState.product.images[0] &&\n                        singleProductState.product.images[0].url\n                  }\n                  className=\"image-size\"\n                />\n              </div>\n              <div className=\"row slider-image-container\">\n                {product &&\n                  product.varient &&\n                  product.varient.map((item, index) => (\n                    <div\n                      onClick={() => setActiveSlider(item)}\n                      className={\n                        item === activeSlider\n                          ? 'col-md-3 active-image-slider'\n                          : 'col-md-3 none-active-image-slider'\n                      }\n                    >\n                      <img\n                        src={item && item.image && item.image.url}\n                        key={index}\n                        className=\"slider-image-size\"\n                      />\n                    </div>\n                  ))}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"product-info-container\">\n              <div className=\"product-info-title\">{product && product.name}</div>\n              <div className=\"product-info-price\">\n                {singleProductState &&\n                singleProductState.product &&\n                singleProductState.product.varient &&\n                singleProductState.product.varient.length > 0\n                  ? `$ ${\n                      activeSlider &&\n                      activeSlider.price &&\n                      activeSlider.price[0] &&\n                      activeSlider.price[0].price\n                    }`\n                  : `$ ${product && product.price && product.price[0] && product.price[0].price}`}\n              </div>\n              <div className=\"product-info-status\">In Stock</div>\n              <div className=\"product-info-description\">\n                <Truncate\n                  lines={6}\n                  dangerouslySetInnerHTML={{\n                    __html: product && product.description && product.description.substring(0, 500),\n                  }}\n                />\n              </div>\n              {product && product.varient && product.varient.length > 0 && (\n                <div className=\"product-info-dropdown\">\n                  <div className=\"mb-2 mt-2 font-weight-bold\">Varient</div>\n                  <Select\n                    options={renderVarients}\n                    placeholder=\"Select Varient\"\n                    onChange={(value) => setActiveSlider(value.item)}\n                  />\n                </div>\n              )}\n\n              <div className=\"product-whole-sale\">\n                <div className=\"product-table-header\">\n                  <div className=\"row\">\n                    <div className=\"col-md-5 ml-4\">QUANTITY</div>\n                    <div className=\"col-md-6 text-right ml-3\">PRICE (WHOLESALE DISCOUNT)</div>\n                  </div>\n                </div>\n                <div>\n                  {siteConfig.wholeSaleData.map((item, index) => (\n                    <div\n                      style={{\n                        background: wholeSaleIndex === item.label ? '#F7AF3A' : null,\n                        color: wholeSaleIndex === item.label ? '#fff' : null,\n                      }}\n                      className=\"row product-wholesale-item\"\n                      onClick={() => {\n                        setDetectWholeSalePrice(true)\n                        setWholeIndex(item.label)\n                        product['price'] = item.price\n                        setItemQuantity(item.value)\n                      }}\n                    >\n                      <div\n                        className=\"col-md-6 product-wholesale-label\"\n                        style={{ color: wholeSaleIndex === item.label ? '#fff' : null }}\n                      >\n                        {item.label}\n                      </div>\n                      <div className=\"col-md-6 text-right\">${item.price}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"row product-info-add-to-cart mb-4\">\n                <div className=\"col-md-4 justify-content-center align-self-center\">\n                  <div className=\"mb-3 font-weight-bold\">Quantity</div>\n                  <QuantityPicker\n                    min={1}\n                    max={6000}\n                    pickerOnchange={(value) => setItemQuantity(value)}\n                    propsValue={itemQuantity}\n                  />\n                </div>\n                <div className=\"col-md-5 add-to-cart\">\n                  <Button\n                    title=\"Add To Cart\"\n                    background={siteConfig.colors.buttonOrangeColor}\n                    hoverBackground={siteConfig.colors.buttonOrangeColorHover}\n                    type=\"button\"\n                    borderRadius={50}\n                    padding={8}\n                    callBack={addProductsToCart}\n                    loader={cartLoader}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"info-column container\">\n        <div className=\"lb-tab-wrapper\" style={activeArrowOffset} />\n        <div className=\"container\">\n          <div className=\"tab-container\">\n            <div\n              className={tabActive === 'detail' ? 'mr-4 active-title' : 'mr-4'}\n              onClick={() => {\n                setTabActive('detail')\n                setActiveArrowOffset({ left: '356.583px' })\n              }}\n            >\n              Details\n            </div>\n            <div\n              className={tabActive === 'review' ? 'ml-4 active-title' : 'ml-4'}\n              onClick={() => {\n                setTabActive('review')\n                setActiveArrowOffset({ left: '485.583px' })\n              }}\n            >\n              Reviews\n            </div>\n          </div>\n\n          <div className=\"main-content\">\n            {tabActive === 'detail' ? (\n              <div dangerouslySetInnerHTML={{ __html: product && product.description }} />\n            ) : (\n              <p>Review section in progress</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    fetchPublicSingleProductFun: (id) => dispatch(fetchPublicSingleProduct(id)),\n    addToCartFun: (data) => dispatch(addToCart(data)),\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n    singleProductState: state.Products.singleProduct,\n    singleProductLoaderState: state.Products.productLoader,\n    addToCartProductsState: state.Cart,\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DesktopProductDetail))\n"],"sourceRoot":""}